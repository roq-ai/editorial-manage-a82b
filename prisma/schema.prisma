generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model publisher {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model research_paper {
  id                                    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title                                 String   @db.VarChar(255)
  content                               String
  author_id                             String?  @db.Uuid
  editor_id                             String?  @db.Uuid
  reviewer_id                           String?  @db.Uuid
  created_at                            DateTime @default(now()) @db.Timestamp(6)
  updated_at                            DateTime @default(now()) @db.Timestamp(6)
  user_research_paper_author_idTouser   user?    @relation("research_paper_author_idTouser", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_research_paper_editor_idTouser   user?    @relation("research_paper_editor_idTouser", fields: [editor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_research_paper_reviewer_idTouser user?    @relation("research_paper_reviewer_idTouser", fields: [reviewer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                           String           @unique @db.VarChar(255)
  firstName                                       String?          @db.VarChar(255)
  lastName                                        String?          @db.VarChar(255)
  roq_user_id                                     String           @db.VarChar(255)
  tenant_id                                       String           @db.VarChar(255)
  created_at                                      DateTime         @default(now()) @db.Timestamp(6)
  updated_at                                      DateTime         @default(now()) @db.Timestamp(6)
  publisher                                       publisher[]
  research_paper_research_paper_author_idTouser   research_paper[] @relation("research_paper_author_idTouser")
  research_paper_research_paper_editor_idTouser   research_paper[] @relation("research_paper_editor_idTouser")
  research_paper_research_paper_reviewer_idTouser research_paper[] @relation("research_paper_reviewer_idTouser")
}
